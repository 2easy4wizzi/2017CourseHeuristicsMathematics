#include <windows.h>
#include <QApplication>
#include <algorithm>

#include "BandBK2To10.h"
#include "LocalK2To10.h"

static QMap<uint, QList<uint>> inputsMap;
void initInputs();
const QList<uint> getInput(int inputBatch, bool shouldShuffle, int sortOrder);
QList<uint> shuffleMyQLIST(QList<uint> &input3rand);
uint getRandNumber(uint low, uint high );

int main(int argc, char *argv[])
{
    Q_UNUSED(argc);
    Q_UNUSED(argv);

    initInputs();

//    QString line("");
//    for (int i = 0; i < 1000; ++i) {
//        line += QString("<<%1").arg(getRandNumber(1,100));
//        if(i % 50 == 0 && i !=0){
//            cout << qPrintable(line);
//            line = "";
//        }
//    }
//    exit(0);

//    new BandBK2To10(getInput(152,false,1));
    new LocalK2To10(getInput(31,false,1));

    return 0;
}

void initInputs(){
    inputsMap[1] = (QList<uint>() << 7 << 9 << 3);
    inputsMap[2] = (QList<uint>() << 9 << 7 << 2);
    inputsMap[3] = (QList<uint>() << 2 << 9 << 7);
    inputsMap[4] = (QList<uint>() << 9 << 7 << 7 << 11 << 2 << 31 << 27 << 35 << 4 << 19);
    inputsMap[5] = (QList<uint>() << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 30<<10);
    inputsMap[6] = (QList<uint>() << 30 << 30 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10 << 10);
    inputsMap[7] = (QList<uint>() << 1 << 1 << 1 << 1 << 1 << 2 << 3 << 4 << 5 << 6);
    inputsMap[8] = (QList<uint>() << 1 << 2 << 3 << 5 << 6 << 9);
    inputsMap[9] = (QList<uint>() << 1 << 1 << 1 << 1 << 1 << 1 << 2 << 2 << 2 << 2 << 2 << 2);
    inputsMap[10] = (QList<uint>() << 1 << 2 << 2 << 2 << 2 << 4 << 4 << 4 << 4 );
    inputsMap[11] = (QList<uint>() << 2 << 2 << 2 << 2 << 3 << 3 << 3 << 4 << 4 << 5 << 6 );
    inputsMap[12] = (QList<uint>() << 6 << 3 << 3 << 2 << 2 << 2);
    inputsMap[13] = (QList<uint>() << 9 << 7 << 7 << 11 << 2 << 31 << 27 << 35 << 4 << 19 << 23 << 29 << 17 << 32 << 33);
    inputsMap[14] =(QList<uint>() << 9 << 7 << 7 << 11 << 2 << 31 << 27 << 35 << 4 << 19 << 23 << 29 << 17 << 32 << 33 << 25 << 32 << 48);
    inputsMap[15] = (QList<uint>() << 9 << 7 << 7 << 11 << 2 << 31 << 27 << 35 << 4 << 19 << 23 << 17<< 21<< 22<< 29 << 17 << 32 << 33 << 25 << 32 << 48 << 22 <<11 <<34 << 9 <<1 <<22 <<11 <<34);
    inputsMap[152] = (QList<uint>() << 9 << 7 << 7 << 11 << 2 << 31 << 27 << 35 << 4 << 19 << 23 << 17<< 21<<  33 << 25 << 32 << 48 << 22 <<11 <<34 << 9 <<1 <<22 <<11 <<34);
    inputsMap[16] = (QList<uint>() << 9 << 7 << 7 << 11 << 2<<23<<15 << 31  << 35 << 4 << 19 << 23 << 17<< 21<< 22<< 29 << 17 << 32 << 33 << 25 << 32 << 48 << 22 <<11 <<34 << 9 <<1 <<22 <<11 <<34);
    inputsMap[17] = (QList<uint>() << 290 << 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10<< 10);
    inputsMap[18] = (QList<uint>() << 37 << 20<< 42<< 25<< 33<< 8<< 18<< 32<< 22<< 39<< 2 << 30<< 18<< 44<< 25<< 7 << 31<< 19<< 10<< 12<< 5 << 9<< 48<< 10<< 17<< 6<< 1<< 37<< 47<< 42);
    inputsMap[19] = (QList<uint>() << 290<< 310<< 110<< 150<< 270<< 140<< 425<< 525<< 600<< 415<< 320<< 90<< 90<< 90<< 330<< 10<< 325<< 80<< 210<< 310<< 170<< 50<< 190<< 730<< 490<< 510<< 190<< 335<< 620<< 120);
    inputsMap[20] = (QList<uint>()<< 2 <<2 <<2 <<2<< 2 <<2 <<2 <<2<< 2 <<2 <<2 <<2<< 2 <<2 <<2 <<2<< 2 <<2 <<2 <<2<< 2 <<2 <<2 <<2<< 2 <<2 <<2 <<2<< 2 <<2 <<2 <<2);
    inputsMap[21] = (QList<uint>()<< 1 <<1 <<1 <<1 <<1 << 1<< 1 <<1 <<1 <<1 <<1 << 1<< 1 <<1 <<1 <<1 <<1 << 1<< 1 <<1 <<1 <<1 <<1 << 1<< 1 <<1 <<1 <<1 <<1 << 1<< 1 <<1 <<1 <<1 <<1 << 1);
    inputsMap[22] = (QList<uint>()<< 2 <<2 <<2 <<2<< 2 <<2 <<2 <<2<< 2 <<2 <<2 <<2<< 2 <<2 <<2 <<2<< 2 <<2 <<2 <<2<< 2 <<2 <<2 <<2<< 1 <<1 <<1 <<1 <<1 << 1 << 1 << 1<< 1 <<1 <<1 <<1 <<1 << 1 << 1 << 1);
    inputsMap[23] = (QList<uint>()<< 1 << 2 << 3<< 1 << 2 << 3<< 1 << 2 << 3<< 1 << 2 << 3<< 1 << 2 << 3<< 1 << 2 << 3);
    inputsMap[24] = (QList<uint>()<< 1 << 2 << 3 << 3<< 1 << 2 << 3 << 3<< 1 << 2 << 3 << 3<< 1 << 2 << 3 << 3<< 1 << 2 << 3 << 3<< 1 << 2 << 3 << 3<< 1 << 2 << 3 << 3<< 1 << 2 << 3 << 3<< 1 << 2 << 3 << 3);
    inputsMap[25] = (QList<uint>()<< 30 << 20 << 5 << 5 << 5 << 3 << 3 << 3 << 2<< 2 << 2 << 1 << 1 << 1 << 1 << 1);
    inputsMap[26] = (QList<uint>()<< 1 << 1 << 2 << 2 << 3 << 3<< 4 << 4 << 5 << 5 << 6 << 6<< 7 << 7 << 8 << 8 << 9 << 9);
    inputsMap[27] = (QList<uint>()<< 5 << 5 << 5 << 5 << 5<< 5 << 5 << 5 << 5 << 5<< 5 << 5 << 5 << 5 << 5<< 5 << 5 << 5 << 5 << 5);
    inputsMap[28] = (QList<uint>()<< 3 << 3 << 3 << 3<< 3 << 3 << 3 << 3<< 3 << 3 << 3 << 3<< 3 << 3 << 3 << 3<< 3 << 3 << 3 << 3<< 3 << 3 << 3 << 3<< 3 << 3 << 3 << 3);
    inputsMap[29] = (QList<uint>()<< 100 << 90 << 80 << 70<< 60 << 50 << 40 << 30<< 20 << 10<< 1 << 2 << 3 << 4 << 5<< 1 << 2 << 3 << 4 << 5<< 1 << 2 << 3 << 4 << 5<< 1 << 2 << 3 << 4 << 5<< 1 << 2 << 3 << 4 << 5);
    inputsMap[30] = (QList<uint>()<< 1<<2<<3<<4<<100 << 90 << 80 << 70<< 60 << 50 << 40 << 30<< 20 << 10<< 1 << 2 << 3 << 4 << 5<< 1 << 2 << 3 << 4 << 5<< 1 << 2 << 3 << 4 << 5<< 1 << 2 << 3 << 4 << 5 << 5);
    inputsMap[31] = (QList<uint>()
                     <<32<<91<<82<<38<<97<<53<<12<<68<<24<<83<<39<<98<<89<<44<<4<<60<<16<<75<<31<<90<<46<<36<<96<<51<<11<<67<<23<<82<<38<<97<<87<<43<<2<<58<<14<<74<<30<<99<<54<<48<<4<<60<<19<<75<<34<<90<<46<<5<<96<<55<<11
                     <<67<<26<<82<<38<<97<<53<<47<<3<<59<<18<<74<<33<<89<<45<<4<<95<<54<<10<<66<<25<<81<<37<<96<<52<<46<<2<<58<<17<<73<<32<<88<<44<<3<<59<<49<<9<<65<<24<<80<<36<<95<<51<<10<<100<<56<<16<<71<<31<<87<<43
                     <<2<<58<<48<<7<<63<<22<<78<<34<<94<<50<<76<<40<<67<<97<<23<<50<<76<<3<<30<<56<<86<<50<<77<<3<<76<<31<<87<<47<<3<<62<<52<<11<<67<<23<<83<<38<<98<<54<<10<<69<<59<<15<<74<<30<<89<<45<<1<<61<<17<<10
                     <<66<<22<<81<<37<<93<<52<<8<<68<<58<<14<<73<<29<<88<<44<<100<<59<<15<<6<<65<<21<<80<<36<<92<<51<<7<<66<<57<<13<<72<<28<<87<<43<<99<<58<<14<<8<<64<<20<<79<<35<<94<<50<<6<<65<<55<<15<<71<<27<<86<<42
                     <<98<<57<<13<<72<<62<<18<<78<<34<<93<<49<<5<<64<<20<<10<<69<<25<<85<<40<<96<<56<<12<<71<<61<<17<<76<<32<<92<<47<<3<<63<<19<<12<<68<<24<<83<<39<<95<<54<<10<<70<<60<<16<<75<<2<<28<<55<<81<<11<<54<<13
                     <<4<<60<<19<<75<<34<<90<<46<<5<<61<<55<<11<<67<<26<<82<<41<<97<<53<<12<<2<<62<<18<<74<<33<<89<<45<<4<<60<<53<<9<<65<<25<<80<<40<<96<<52<<11<<1<<60<<16<<72<<31<<87<<43<<3<<59<<52<<8<<64<<23<<79
                     <<38<<94<<50<<10<<66<<56<<15<<71<<30<<86<<42<<1<<57<<17<<7<<63<<22<<78<<34<<93<<49<<8<<64<<55<<14<<70<<29<<85<<41<<100<<56<<15<<6<<62<<21<<77<<33<<92<<48<<7<<63<<53<<13<<69<<28<<84<<40<<99<<55<<11
                     <<4<<60<<20<<76<<31<<91<<47<<6<<62<<52<<11<<67<<27<<83<<38<<98<<54<<10<<69<<59<<18<<74<<30<<89<<45<<5<<61<<17<<10<<66<<22<<81<<37<<96<<52<<8<<68<<58<<17<<73<<29<<88<<44<<100<<59<<15<<9<<65<<21<<80
                     <<36<<95<<51<<7<<66<<57<<16<<72<<28<<87<<43<<99<<58<<14<<8<<64<<20<<79<<35<<94<<50<<6<<65<<55<<11<<71<<27<<86<<42<<98<<57<<13<<72<<62<<18<<78<<34<<89<<49<<5<<64<<20<<10<<69<<25<<85<<40<<96<<56<<12
                     <<71<<61<<17<<76<<32<<88<<47<<3<<63<<19<<9<<68<<24<<83<<39<<95<<54<<10<<66<<60<<16<<75<<31<<87<<46<<2<<61<<17<<8<<67<<23<<82<<38<<94<<53<<9<<65<<59<<15<<74<<30<<86<<32<<88<<47<<74<<100<<64<<91<<21
                     <<47<<20<<76<<35<<91<<47<<40<<96<<56<<11<<67<<27<<83<<42<<98<<88<<47<<3<<59<<18<<74<<34<<90<<45<<39<<95<<54<<10<<66<<25<<81<<37<<97<<52<<46<<2<<58<<17<<73<<32<<88<<44<<100<<94<<50<<6<<65<<21<<77<<36
                     <<92<<51<<42<<98<<57<<13<<72<<28<<84<<43<<99<<93<<49<<4<<64<<20<<79<<35<<91<<50<<40<<100<<56<<11<<71<<27<<86<<42<<98<<91<<47<<3<<62<<18<<78<<34<<90<<49<<39<<98<<54<<10<<69<<25<<81<<41<<97<<56<<46<<2
                     <<61<<17<<76<<32<<88<<48<<3<<97<<53<<9<<68<<24<<80<<39<<95<<54<<45<<1<<60<<16<<75<<31<<87<<46<<2<<96<<52<<8<<67<<23<<82<<38<<94<<53<<44<<100<<59<<15<<74<<30<<89<<45<<1<<95<<51<<10<<66<<22<<81<<37
                     <<93<<52<<42<<2<<58<<13<<73<<29<<88<<44<<100<<59<<49<<9<<65<<20<<80<<36<<92<<51<<7<<100<<56<<16<<71<<27<<87<<43<<99<<58<<48<<7<<63<<19<<78<<34<<94<<50<<5<<99<<55<<11<<70<<26<<85<<41<<97<<57<<47<<6
                     <<62<<18<<77<<33<<92<<48<<4<<98<<54<<10<<69<<25<<84<<40<<96<<55<<46<<5<<61<<17<<76<<32<<91<<47<<3<<62<<53<<9<<68<<24<<83<<39<<98<<54<<10<<4<<60<<16<<75<<31<<90<<46<<2<<61<<51<<11<<67<<22<<82<<38
                     <<94<<53<<9<<2<<58<<14<<74<<29<<89<<45<<94<<50<<44<<100<<59<<15<<71<<30<<86<<42<<1<<91<<51<<7<<62<<22<<78<<37<<93<<49<<42<<98<<58<<13<<69<<29<<85<<41<<100<<56<<49<<5<<61<<20<<76<<36<<92<<48<<7<<97
                     <<53<<12<<68<<27<<83<<39<<99<<54<<48<<4<<60<<19<<75<<31<<90<<46<<5<<96<<52<<11<<67<<26<<82<<38<<97<<53<<47<<3<<59<<18<<74<<30<<89<<45<<4<<95<<51<<10<<66<<25<<81<<37<<96<<52<<42<<2<<58<<17<<73<<29
                     <<88<<44<<3<<59<<49<<9<<65<<20<<80<<36<<95<<51<<7<<100<<56<<16<<71<<27<<87<<43<<2<<58<<48<<7<<63<<19<<78<<34<<94<<50<<5<<99<<55<<14<<70<<26<<85<<41<<97<<57<<47<<6<<62<<18<<77<<33<<92<<48<<4<<98
                     <<54<<13<<69<<25<<84<<40<<96<<55<<46<<5<<61<<17<<76<<32<<91<<47<<3<<62<<53<<9<<68<<24<<83<<39<<95<<54<<10<<4<<60<<16<<75<<31<<87<<46<<2<<61<<51<<7<<67<<22<<82<<38<<94<<53<<9<<2<<58<<14<<74<<29
                     <<5);
}

const QList<uint> getInput(int inputBatch, bool shouldShuffle, int sortOrder)
{
    QList<uint> inputReturn = inputsMap.contains(inputBatch) ? inputsMap[inputBatch] : QList<uint>();
    if(shouldShuffle){
        inputReturn = shuffleMyQLIST(inputReturn);
    }
    //sorting from low to high
    if(sortOrder == -1){
        std::sort(inputReturn.begin(), inputReturn.end());
    }
    //sorting from high to low
    else if(sortOrder == 1){
        std::sort(inputReturn.rbegin(), inputReturn.rend());
    }
    double sumAll(0);
    for(const uint& job :inputReturn) sumAll+= job;
    cout2 << "input selected:"<<inputReturn << "size" << inputReturn.size() << "sum" << sumAll;
    return inputReturn;
}

QList<uint> shuffleMyQLIST(QList<uint> &input3rand)
{
    Sleep(1000);//for rand to have different time
    qsrand(QDateTime::currentDateTime().toTime_t());
    std::random_shuffle(input3rand.begin(), input3rand.end());
    return input3rand;
}

uint getRandNumber(uint low, uint high )
{
    Sleep(100);//for rand to have different time
    qsrand(uint(QTime::currentTime().msec()));
    return (qrand() % ((high + 1) - low) + low);
}
